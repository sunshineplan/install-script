#! /bin/bash

installSoftware(){
    apt -qq -y install certbot lexicon python3-bs4
}

writeConfigFile(){
    cat >> /etc/letsencrypt/cli.ini <<-EOF

	authenticator = manual
	manual-public-ip-logging-ok = True
	preferred-challenges = dns
	EOF
}

writeAuthScript(){
    cat > /etc/letsencrypt/$script_name <<-EOF
	#!/usr/bin/env bash

	set -euf -o pipefail

	PROVIDER="$provider"
	PROVIDER_CREDENTIALS="--auth-token=auth-token"
	PROVIDER_UPDATE_DELAY=30

	function auth {
	    lexicon \${PROVIDER} \${PROVIDER_CREDENTIALS} \\
	    create \${CERTBOT_DOMAIN} TXT --name "_acme-challenge.\${CERTBOT_DOMAIN}" --content "\${CERTBOT_VALIDATION}"

	    sleep \${PROVIDER_UPDATE_DELAY}
	}

	function cleanup {
	    lexicon \${PROVIDER} \${PROVIDER_CREDENTIALS} \\
	    delete \${CERTBOT_DOMAIN} TXT --name "_acme-challenge.\${CERTBOT_DOMAIN}" --content "\${CERTBOT_VALIDATION}"
	}

	HANDLER=\$1; shift;
	if [ -n "\$(type -t \$HANDLER)" ] && [ "\$(type -t \$HANDLER)" = function ]; then
	  \$HANDLER "\$@"
	fi
	EOF
    chmod +x /etc/letsencrypt/$script_name
}

runCertbot(){
    certbot register --agree-tos --no-eff-email --register-unsafely-without-email
    #certbot certonly --cert-name $cert-name -d $domain,*.$domain --manual-auth-hook "/etc/letsencrypt/$script_name auth" --manual-cleanup-hook "/etc/letsencrypt/$script_name cleanup"
}

main(){
    #read -p 'Please enter your domain:' domain
    read -p 'Please enter your domain provider:' provider
    script_name="lexicon-$provider"
    if [ -z "$provider" ]
    then
        script_name="lexicon"
    fi
    installSoftware
    writeConfigFile
    writeAuthScript
    runCertbot
	echo Please fill auth info manually!
}

main
