#!/bin/bash

API="https://api.github.com/repos/v2fly/v2ray-core/releases/latest"
DIR="/home/"
REMOTE="example.com"
REMOTE_USER="user"
REMOTE_DIR="/home/"
CONFIG="config.json"
COPY_EXEC=1
DOWNLOAD_URL="https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh"
CUR_VER=""
NEW_VER=""

PROFILE=""
if [ $# -eq 0 ]; then
    PROFILE="default"
else
    PROFILE=$1
fi

# 1: new version. 0: no.
checkVersion() {
    NEW_VER=$(curl $API -s | python3 -c "import sys, json;print(json.load(sys.stdin)['tag_name'])")
    if [ ! -f "${DIR}v2ray_version" ]; then
        echo Failed to get current version.
        return 1
    fi
    CUR_VER=$(cat ${DIR}v2ray_version)
    if [ $NEW_VER == $CUR_VER ]; then
        echo No new version.
        COPY_EXEC=0
        return 0
    fi
    echo New version found.
    return 1
}

downloadV2ray() {
    echo -e "Downloading $NEW_VER"
    curl -Lo ${DIR}install-release.sh $DOWNLOAD_URL
    scp -p ${DIR}install-release.sh $REMOTE_USER@$REMOTE:$REMOTE_DIR
}

getConfig() {
    cp ${DIR}${CONFIG} ${DIR}${CONFIG}.remote
    case $PROFILE in
    default)
        sed -i "s/PROFILE/default/" ${DIR}${CONFIG}.remote
        ;;
    profile1)
        sed -i "s/PROFILE/profile1/" ${DIR}${CONFIG}.remote
        ;;
    *)
        echo "Unknow profile."
        rm ${DIR}${CONFIG}.remote
        return 4
        ;;
    esac
}

remoteStart() {
    command=""
    scp -p ${DIR}${CONFIG}.remote $REMOTE_USER@$REMOTE:${REMOTE_DIR}config.json
    if [ $COPY_EXEC -eq 1 ]; then
        command="bash ${REMOTE_DIR}install-release.sh -p socks5://localhost:9909"
    else
        command="service v2ray restart;sleep 2;rm -f ${REMOTE_DIR}config.json"
    fi
    ssh $REMOTE_USER@$REMOTE "$command"
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
        echo $NEW_VER >${DIR}v2ray_version
    fi
    if [ $COPY_EXEC -eq 1 ]; then
        command="sleep 2;rm -rf ${REMOTE_DIR}install-release.sh /var/log/v2ray ${REMOTE_DIR}config.json"
        ssh $REMOTE_USER@$REMOTE "$command"
    fi
    rm ${DIR}${CONFIG}.remote
    return $RETVAL
}

main() {
    checkVersion
    if [ $? -eq 1 ]; then
        downloadV2ray
    fi
    getConfig && remoteStart
    if [ $? -eq 0 ]; then
        echo Done.
    else
        echo Failed.
    fi
}

main
