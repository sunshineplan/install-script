#! /bin/bash

installSoftware() {
    DEBIAN_FRONTEND=noninteractive apt -qq -y install nftables strongswan libcharon-extra-plugins
}

setupIPtables() {
    cat >/etc/ipsec.nft <<-EOF
	table ipsec {
	    chain postrouting {
	        type nat hook postrouting priority 100;
	        ip saddr 10.31.0.0/16 oif eth0 masquerade
	    }

	    chain prerouting {
	        type nat hook prerouting priority 100;
	        ip protocol tcp ip saddr 10.31.3.0/24 redirect to 12345
			ip protocol udp ip saddr 10.31.3.0/24 redirect to 12345
	    }
	}
	EOF
    echo -e '\ninclude "/etc/ipsec.nft"\n' >>/etc/nftables.conf
    nft -f /etc/ipsec.nft
}

setupSysctl() {
    echo 1 >/proc/sys/net/ipv4/ip_forward
    cat >/etc/sysctl.d/90-vpn-sysctl.conf <<-EOF
	net.ipv4.ip_forward=1
	EOF
}

writeConfigFile() {
    #sed -i '/uniqueids/s/.*/\tuniqueids = no/' /etc/ipsec.conf
    sed -i "/# Add connections here./a\\
\nconn %default\\
\tdpdaction=clear\\
\tkeyexchange=ikev2\\
\tauto=add\\
\trekey=no\\
\treauth=no\\
\tcompress=yes\\
\n\tleftcert=fullchain.pem\\
\tleftsendcert=always\\
\tleftsubnet=0.0.0.0/0\\
\trightsourceip=10.31.2.0/24\\
\trightdns=8.8.8.8,8.8.4.4\\
\trightauth=eap-mschapv2\\
\teap_identity=%identity\\
\nconn windows\\
\tike=aes256-sha1-modp1024!
\nconn mobile\\
\tleftid=$domain" /etc/ipsec.conf
}

writeSecretsFile() {
    cat >>/etc/ipsec.secrets <<-EOF

	: RSA privkey.pem

	user : EAP "password"
	EOF
}

configLog() {
    mkdir -p /var/log/ipsec
    cat >/etc/strongswan.d/logging.conf <<-EOF
	charon {
	    filelog {
	        charon {
	            path = /var/log/ipsec/ipsec.log
	            time_format = %b %e %T
	            ike_name = yes
	            flush_line = yes
	            log_level = yes
	            default = -1
	            ike = 1
	        }
	    }
	}
	EOF
    cat >/etc/logrotate.d/ipsec <<-EOF
	/var/log/ipsec/ipsec.log {
	    copytruncate
	    rotate 12
	    weekly
	    compress
	    delaycompress
	    missingok
	    notifempty
	}
	EOF
    cat >>/etc/apparmor.d/local/usr.lib.ipsec.charon <<-EOF
	/var/log/ipsec/* w,
	EOF
    service apparmor reload
}

main() {
    read -p 'Please enter domain:' domain
    installSoftware
    setupIPtables
    setupSysctl
    writeConfigFile
    writeSecretsFile
    configLog
    echo Please copy cert files and fill secrets info
}

main
